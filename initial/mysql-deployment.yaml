## PersistentVolume
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: mysql-pv
#spec:
#  capacity:
#    storage: 2Gi
#  accessModes:
#    - ReadWriteOnce
#  persistentVolumeReclaimPolicy: Retain
#  volumeMode: Filesystem
#  storageClassName: manual
#  awsElasticBlockStore:
#    volumeID: vol-0431616e41bc74819
#    fsType: ext4
#---
# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: gp2
#  volumeName: mysql-pv
---
#MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: demo-app-mysql
  labels:
    app: demo-app
spec:
  ports:
    - port: 3306
  selector:
    app: demo-app
    tier: mysql
  clusterIP: None
---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: mysql-pvc
#  labels:
#    app: demo-app
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 2Gi
#  storageClassName: gp2  # or "gp3", "standard", etc.
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-mysql
  labels:
    app: demo-app
spec:
  selector:
    matchLabels:
      app: demo-app
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: demo-app
        tier: mysql
    spec:
      containers:
        - image: mysql:5.6
          name: mysql
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config-map
                  key: mysql-database-name
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: mysql-config-map
                  key: mysql-user-username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: mysql-user-password
          livenessProbe:
            tcpSocket:
              port: 3306
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - mysqladmin ping -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init-script
          configMap:
            name: init-sql-script
            items:
              - key: schema.sql
                path: init.sql